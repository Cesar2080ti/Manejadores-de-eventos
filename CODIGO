import tkinter as tk

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.tasks = []

        # Configuración de la ventana
        self.root.title("Gestor de Tareas")
        self.root.geometry("400x400")
        self.root.columnconfigure(0, weight=1)
        self.root.rowconfigure(2, weight=1)

        # Componentes de la interfaz
        self.entry = tk.Entry(self.root)
        self.add_button = tk.Button(self.root, text="Añadir Tarea", command=self.add_task)
        self.complete_button = tk.Button(self.root, text="Marcar Completada", command=self.mark_completed)
        self.delete_button = tk.Button(self.root, text="Eliminar Tarea", command=self.delete_task)
        self.listbox = tk.Listbox(self.root)

        # Diseño de la interfaz
        self.entry.grid(row=0, column=0, padx=5, pady=5, sticky="ew")
        self.add_button.grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        self.complete_button.grid(row=1, column=0, padx=5, pady=5, sticky="ew")
        self.delete_button.grid(row=1, column=1, padx=5, pady=5, sticky="ew")
        self.listbox.grid(row=2, column=0, columnspan=2, padx=5, pady=5, sticky="nsew")

        # Atajos de teclado
        self.entry.bind("<Return>", self.add_task)
        self.root.bind("c", self.mark_completed)
        self.root.bind("d", self.delete_task)
        self.root.bind("<Delete>", self.delete_task)
        self.root.bind("<Escape>", lambda e: self.root.destroy())

    def add_task(self, event=None):
        text = self.entry.get().strip()
        if text:
            self.tasks.append({"text": text, "completed": False})
            self.entry.delete(0, tk.END)
            self.refresh_listbox()

    def mark_completed(self, event=None):
        if event is not None and self.root.focus_get() == self.entry:
            return
        selected = self.listbox.curselection()
        if selected:
            index = selected[0]
            self.tasks[index]["completed"] = True
            self.refresh_listbox()

    def delete_task(self, event=None):
        if event is not None and self.root.focus_get() == self.entry:
            return
        selected = self.listbox.curselection()
        if selected:
            index = selected[0]
            del self.tasks[index]
            self.refresh_listbox()

    def refresh_listbox(self):
        self.listbox.delete(0, tk.END)
        for i, task in enumerate(self.tasks):
            self.listbox.insert(tk.END, task["text"])
            if task["completed"]:
                self.listbox.itemconfig(i, fg="gray")

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
